{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","isWinning","color","value","Board","_React$Component","Object","_home_andre_programacao_jogo_da_velha_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_andre_programacao_jogo_da_velha_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_andre_programacao_jogo_da_velha_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","apply","arguments","_home_andre_programacao_jogo_da_velha_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_home_andre_programacao_jogo_da_velha_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","i","_this","winningArr","winningSquares","filter","square","squares","length","counter","grid","j","push","renderSquare","React","Component","Game","_React$Component2","_this2","call","state","history","Array","fill","clicado","stepNumber","xIsNext","historyAscending","slice","calculateWinner","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","Math","floor","currentStyle","fontWeight","style","jumpTo","reverse","player","handleClick","RadioOption","option","onChange","handleToggleOrder","checked","opt","label","toUpperCase","type","id","name","htmlFor","lines","_lines$i","_home_andre_programacao_jogo_da_velha_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","line","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.13cffc48.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" \r\n        onClick={props.onClick}>\r\n            style = {props.isWinning ? { color: 'red' } : { color: 'black' }}\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n\r\n    renderSquare(i) {\r\n        const winningArr = this.props.winningSquares.filter(\r\n            (square) => square === i);\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n                isWinning={winningArr.length ? true : false}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n            let counter = 0;\r\n            let grid = [];\r\n            let linhas = 3;\r\n            let colunas = 3;\r\n            for (let i = 0; i < linhas; i++) {\r\n                let squares = [];\r\n                for (let j = 0; j < colunas ; j++ , counter++){\r\n                    squares.push(this.renderSquare(counter));\r\n                }\r\n                grid.push(React.createElement('div', { className: 'board-row', key: \"row-\" + i }, \r\n                 squares));\r\n            }\r\n            return grid;\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n                clicado: null,\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            historyAscending: true,\r\n        };\r\n    }\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n                clicado: i,\r\n        }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    handleToggleOrder(historyAscending){\r\n        this.setState({\r\n            historyAscending: historyAscending,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Ir para o movimento ' + move + \r\n                ' \\n Movimento feito por : \\n ' +\r\n                 (move % 2 === 0 ? '\"X\"' : ' \"O\" \\n') +\r\n                 'em : (' + (Math.floor(step.clicado / 3 + 1)) + ',' + (Math.floor(step.clicado % 3 + 1)) + ')':  \r\n                'Ir para o come√ßo do jogo';\r\n            const currentStyle = move === this.state.stepNumber ?\r\n                { fontWeight: 'bold' } : { fontWeight: 'normal' };\r\n            return (\r\n                <li key={move} style={currentStyle}>\r\n                    <button onClick={() => this.jumpTo(move)} style={currentStyle} >{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        if (!this.state.historyAscending) {\r\n            moves.reverse();\r\n        }\r\n        let status;\r\n        let winningSquares = [];\r\n        if (winner) {\r\n            status = 'Winner: ' + winner.player;\r\n            winningSquares = winner.winningSquares;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board \r\n                    squares={current.squares}\r\n                    onClick={(i) => this.handleClick(i)}\r\n                    winningSquares={winningSquares}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                    <div>\r\n                    Ordena√ß√£o do Hist√≥rico de Movimentos\r\n                    <RadioOption option= \"Crescente\" \r\n                    onChange = {() => this.handleToggleOrder(true)}\r\n                    checked = {this.state.historyAscending}/>\r\n                    <RadioOption option=\"Decrescente\" \r\n                    onChange={() => this.handleToggleOrder(false)} \r\n                    checked={!this.state.historyAscending} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction RadioOption(props) {\r\n    const opt = props.option;\r\n    const label = opt.slice(0,1).toUpperCase() + opt.slice(1);\r\n    return (\r\n        <div>\r\n            <input type = \"radio\"\r\n            id = {opt}\r\n            name = {opt}\r\n            value = {opt}\r\n            checked = {props.checked}\r\n            onChange = {props.onChange}\r\n            />\r\n            <label htmlFor = {opt}>{label}</label>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ========================================\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<Game />);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return {\r\n                player : squares[a],\r\n                line : lines[i],\r\n                \r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\n"],"sourceRoot":""}